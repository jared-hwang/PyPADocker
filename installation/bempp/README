Introduction
============

BEM++ is an open-source boundary element library. For details see
www.bempp.org


History
=======
3.3.4 (02 Aug 2018)
-------------------
* Fixed bug in scalar multitrace operator when target keyword is used

3.3.3 (23 Apr 2018)
-------------------
* Fixed grid refinement
* Notebook plotting now via Plotly

3.3.2 (20 Dec 2017)
-------------------
* Added experimental support for grid refinement.

3.3.1 (18 Dec 2017)
-------------------
* Fixed bug in IPython viewer for complex data
* Fixed the dual_product method

3.3.0 (19 Nov 2017)
--------------------
* Added new import/export mechanics
* Import/Export of binary gmsh files
* Export of VTK files
* Paraview can be enabled as external viewer

3.2.0 (04 Aug 2017)
-------------------
Released version 3.2.0

* Various bug fixes
* Interactive 3d visualization in IPython Notebooks
* Domain potentials for electrostatic field computations

3.1.5 (16 May 2017)
--------------------
Released version 3.1.5

* Fixed delayed logging messages in Jupyter Notebook

3.1.4 (19 April 2017)
---------------------
Released version 3.1.4

* Added mpi-default-dev package to fix MPI loading problem on fresh Ubuntu install
 
3.1.3 (15 April 2017)
---------------------
Released version 3.1.3

* Fixed dependency issues on Ubuntu Zesty

3.1.2 (14 April 2017)
---------------------
Released version 3.1.2

* Enabled compatibility with Dune 2.5.0

3.1.1 (10 January 2017)
-----------------------
Released version 3.1.1

* Small bug fixes
* Disabled projection mode for dense assembly

3.1.0 (4 January 2017)
----------------------
Released version 3.1

* Various smaller and larger bug fies
* A new assembly mechanism baed on projection_spaces
* Redesigned Maxwell operators including stable Maxwell Calderon projectors
* MPI support for H-Matrix discretization
* Rewritten Grid manager to remove dependency on Dune-Foamgrid


3.0.3 (28 January 2016)
------------------------
Released version 3.0.3

* Various smaller bug fixes
* Rewrote the H-Matrix clustering algorithm to fix a rare exception
with certain shapes.
* New unit tests
* Added function to efficiently assemble pairs of single-layer/hypersingular operators
* Cube with reentrant corner added to shapes module
* Reenabled BLAS-like assembly for higher order spaces
 

3.0.2 (03 December 2015)
------------------------
Released version 3.0.2

* Fixed bug in range space assignment of operator times GridFunction
* Disabled Blas-like assembly for higher-order basis functions to to bug in typical_test_scalar_kernel_trial_integral.cpp
* Added new methods to GridFunction to evaluate integral over boundary and to evaluate surface gradient
* Made accessible space parameters in Python that control the boundary behavior of spaces on segments
* Other small fixes

3.0.1 (24 November 2015)
------------------------
Released version 3.0.1

* Fixed bug in export function


3.0.0 (14 November 2015)
------------------------
Released version 3.0.0

2.9.9 (25 October 2015)
-----------------------
Last test of upcoming 3.0 release

2.9.0 (10 March 2015)
---------------------
Development version as part of a major redesign of BEM++.

2.0.1 (17 October 2013)
------------------------

A maintenance release that fixes the following issues
- Support for barycentric grids on block operators
- An MKL linking issue introduced in Version 2.0.0
- Support for Anaconda Python 1.7


2.0.0 (27 September 2013)
-------------------------

This is a major new release. It contains many bugfixes to the 1.9 beta release and supports opposite order preconditioning for Dirichlet and Helmholtz problems.


1.9.2 (7 August 2013)
--------------------

A maintenance release fixing a compatibility problem with Canopy 1.0.3 on
Linux. The MKL libraries installed by Canopy should now be automatically
detected without the necessity of setting the ``LD_LIBRARY_PATH`` environmental
variable manually.

1.9.1 (7 August 2013)
--------------------

A maintenance release fixing two bugs in the installer:

- Prevented Dune from using different BLAS and LAPACK libraries
  than BEM++ itself.
- Corrected the code detecting paths to MKL libraries.

1.9.0 (22 June 2013)
--------------------

This is a preview (beta) of the upcoming BEM++ 2.0. It provides the following
new features:

- Solution of Maxwell equations. See the documentation of the Maxwell
  module for more information about the available operators, and the
  ``maxwell_scattering_diel.py``, ``maxwell_scattering_pec.py`` and
  ``maxwell_diffraction_by_plate.py`` scripts for usage examples.

- More robust ACA assembly of operators containing zero or small-magnitude
  subblocks stemming from flat or nearly flat parts of surfaces (e.g. the
  double-layer potential boundary operator).

- New, faster methods of ACA assembly of integral operators
  (especially hypersingular operators). See the documentation of
  AcaOptions::mode for more information.

- ACA-accelerated evaluation of potentials in space. See the
  documentation of EvaluationOptions::switchToAcaMode for more
  information.

- New ``visualization2`` module for interactive visualization of calculation
  results in Python. Based on the Mayavi library, this module makes it possible
  to change plot properties (e.g. colour schemes, colour scales) using a
  GUI. Note that the old ``visualization`` module is still supported.

- The versions of some libraries downloaded by the BEM++ installer
  (specifically, DUNE and Trilinos) have been updated.

1.1.4 (10 June 2013)
--------------------

This version brings some improvements to the documentation of the C++
interface. In particular, standalone functions are now visible in the
documentation of the most closely related class; classes responsible
for grid management have been separated into the new Grid module; and
the Doxygen documentation is now searchable.

In addition, a missing #include directive has been added to the Swig
interface file bempp.swg. This is only important for users
implementing their own boundary operator classes.

1.1.3 (10 May 2013)
-------------------

This version adds support for the new version of Enthought Python Distribution,
Canopy. At the time of writing, the Mac version of Canopy seems to be more
stable than the Linux version. Linux users might consider using the older EPD
7.3 version for the time being.

1.1.2 (28 January 2013)
----------------------

A maintenance release improving the detection of the G77 linking convention on
32-bit systems.

1.1.1 (7 January 2013)
----------------------

A maintenance release fixing problems encountered during compilation without
AHMED.

1.1 (11 December 2012)
----------------------

New features:

- Significantly simplified the implementation of custom boundary operators:

  * Thanks to the new GeneralElementarySingularIntegralOperator class there is
    no need to declare a new subclass of ElementaryIntegralOperator for each new
    kernel.

  * The mechanism of discrete weak-form caching has been modified and is no
    longer based on a global cache indexed with identifiers of abstract boundary
    operators. As a result, implementation of the AbstractBoundaryOperator::id()
    method in new operator classes can be safely skipped, as this method is no
    longer used.

- Improved the conversion of discrete operators into the H-matrix format:

  * This functionality has been implemented for discrete operators stored as
    sparse matrices and for blocked discrete operator. This means in particular
    that a discrete operator composed of several blocks stored as separate H-
    and/or sparse matrices can now be converted into a *single* H-matrix.

  * The default values of the arguments to
    DiscreteBoundaryOperator::asDiscreteAcaBoundaryOperator() have been changed
    to reduce the chances of unintended loss of accuracy during addition of
    H-matrices.

- Added the adjoint() function returning the adjoint of a boundary operator.

- Added the transpose(), conjugate() and conjugateTranspose() functions
  returning the respective transformations of discrete boundary operators.

- Added the UnitSpace class, representing the space consisting of the single
  function equal to 1 everywhere. This class is useful in the solution of
  Neumann problems.

- Added the estimateL2Error() function, which can be used to calculate
  accurately the L^2 norm of the difference between a numerical and analytical
  solution of a problem.

- GridFunction objects are now able to calculate their projections on any dual
  space, specified by a new parameter of the GridFunction::projections() method.
  For compatibility, it remains possible to fix the dual space during
  construction of a GridFunction and to call projections() without arguments.

- The quadrature order for single regular integrals specified with
  AccuracyOptions is now used during the discretisation of functions into
  GridFunction objects (previously it was only used during potential
  evaluation).

This version maintains source-level (but not binary-level) backward
compatibility with versions 1.0.x.

1.0.2 (12 November 2012)
------------------------

A maintenance release fixing a few minor bugs in BEM++. It contains a workaround
for a suspected compiler bug in llvm-gcc on MacOS X 10.7 in 64-bit mode and
adds support for GCC 4.7.

1.0.1 (3 November 2012)
-----------------------

A maintenance release correcting two bugs in the AHMED interface
and improving the update procedure.

1.0 (29 October 2012)
---------------------

The first official version of the library, including the following features:

- Galerkin discretization of all standard boundary integral operators
  (single-layer potential, double-layer potential, adjoint double-layer
  potential, hypersingular operator) for Laplace, Helmholtz and modified
  Helmholtz problems in three dimensions.

- Numerical evaluation of boundary-element integrals (singular integrals dealt
  with using Sauter-Schwab quadrature rules).

- Triangular surface mesh handling. Import of meshes in Gmsh format.

- Piecewise constant and continuous piecewise linear basis functions.

- Dense-matrix representation of boundary integral operators supported natively.

- Assembly of H-matrix representations of boundary integral operators via
  adaptive cross approximation (ACA) supported thanks to an interface to
  M. Bebendorf�s AHMED library.

- H-matrix-based preconditioners (via AHMED).

- Easy creation of operators composed of several logical blocks.

- Interfaces to iterative linear solvers from Trilinos.

- Evaluation of potentials in space (away from the discretized surface).

- Export of solutions in VTK format.

- Parallel operation on shared-memory CPU architectures.

- C++ and Python interfaces.

Installation
============

See http://www.bempp.org/installation.html for up-to-date installation
instructions.

Contact
=======

If you run into problems with installation or usage of BEM++, please let us know
by opening an issue at https://github.com/bempp/bempp/issues.

The BEM++ Team
