INCLUDE(InstallRequiredSystemLibraries)

# Get the Python version

execute_process ( 
COMMAND ${PYTHON_EXECUTABLE} -c "import sys; print(sys.version_info.major)" 
OUTPUT_VARIABLE PYTHON_VERSION_MAJOR 
OUTPUT_STRIP_TRAILING_WHITESPACE)

if (${PYTHON_VERSION_MAJOR} EQUAL 3)
   SET(BEMPP_PACKAGE_NAME "python3-bempp")
   SET(BEMPP_FILE_NAME "python3-bempp-${Bempp_VERSION}")
else()
   SET(BEMPP_PACKAGE_NAME "python-bempp")
   SET(BEMPP_FILE_NAME "python-bempp-${Bempp_VERSION}")
endif()

SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "amd64")
SET(CPACK_DEBIAN_PACKAGE_NAME "${BEMPP_PACKAGE_NAME}")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libtbb2, libstdc++6")
SET(CPACK_DEBIAN_PACKAGE_RECOMMENDS "gmsh")

SET(CPACK_PACKAGING_INSTALL_PREFIX "/usr")
SET(CPACK_PACKAGE_CONTACT "Timo Betcke <timo.betcke@gmail.com>")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "The BEM++ boundary element library")
SET(CPACK_PACKAGE_VENDOR "BEMPP Solutions")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${PROJECT_SOURCE_DIR}/README")
SET(CPACK_RESOURCE_FILE_LICENSE "${PROJECT_SOURCE_DIR}/LICENSE")
SET(CPACK_PACKAGE_FILE_NAME "${BEMPP_FILE_NAME}")
SET(CPACK_PACKAGE_VERSION_MAJOR "${BEMPP_VERSION_MAJOR}")
SET(CPACK_PACKAGE_VERSION_MINOR "${BEMPP_VERSION_MINOR}")
SET(CPACK_PACKAGE_VERSION_PATCH "${BEMPP_VERSION_PATCH}")
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
INCLUDE(CPack)
